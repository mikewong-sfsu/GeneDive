/**
 * @class     Table
 * @brief     Results Table Viewer API
 * @details   Automates the MVC Table Viewer.
 * @authors   Mike Wong mikewong@sfsu.edu
 * @ingroup   MVC
 */


let Table = (superclass) => class extends superclass {

	/**
	* @return The results table as an array of objects
	**/
	resultsTable() {

		return this.page.evaluate( () => {
			const selector = '.table';
			let values     = [];
			let table      = $( selector )[ 0 ];
			let rows       = [ ... table.rows ];
			let header     = rows.shift();
			let dgr        = 0;

			// Parse the header row
			let headers  = [ ... header.cells ];
			let fields   = headers.map(( cell ) => { let text = cell.textContent; if( text === "DGR" ) { dgr++; return `${text}${dgr}`; } return text; });

			// Parse the data rows
			rows.forEach(( row ) => {
				let obj   = {};
				let cells = [ ... row.cells ];
				cells.forEach(( cell, c ) => {
					let field = fields[ c ];
					let nodes = [ ... cell.childNodes ];
					obj[ field ] = nodes.reduce(( text, node ) => { return (text += node.textContent); }, '' );
				});
				delete obj[ '' ]; // Expansion column (+), which has no header
				values.push( obj );
			});
			return values;
		});
	}
}

module.exports = Table;
